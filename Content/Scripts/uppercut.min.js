/*!
 * Uppercut JavaScript library v0.0.3
 * (c) Matthew M. Osborn - https://github.com/osbornm/uppercut#readme
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */


!function(a,b){var c=this.jQuery,d=this.ko,e=this.console;if("object"!=typeof d)throw"must include knockout.js before uppercut";d.asObservable=function(a){return d.isObservable(a)?a:d.observable(a)},d.asObservableArray=function(a){return d.isObservable(a)?a:d.observableArray(a)},d.bindingHandlers.console={update:function(a,b){e.log(d.unwrap(b()))}},d.virtualElements.allowedBindings.console=!0,d.bindingHandlers.href={update:function(a,b,c,e,f){return d.bindingHandlers.attr.update(a,function(){return{href:b()}},c,e,f)}},d.trackableObservable=function(a){a=d.unwrap(a);var b=d.observable(a);return b.committedValue=d.observable(a),b.commit=function(){b.committedValue(b())},b.reset=function(){b(b.committedValue()),b.isModified&&b.isModified(!1)},b.isTrackableObservable=!0,b},d.trackableObservableArray=function(a){var b=d.unwrap(a)||[],e=b.slice(),f=d.observableArray(a);return f.committedValue=d.observableArray(b.slice()),f.commit=function(){f.committedValue(f())},f.reset=function(){c.each(e,function(){this.reset&&this.reset()}),f(e.slice()),f.isModified&&f.isModified(!1)},f.isTrackableObservableArray=!0,f}}(this||(0,eval)("this"));
//# sourceMappingURL=uppercut.min.js.map